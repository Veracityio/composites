name: Set Pipeline Variables from SSM
description: "This action is intended on grabbing pipeline variables from AWS SSM as well as inputs and setting them as environment variables for the pipeline to use. It will take a series of inputs and if they are passed in, the variables will be set. If they are not passed in, the action will set them defaulted to 'NOT_SET'. There are a few concepts here in that this setup assumes there is a centralized infrastructure account, also there is an account that is the target. These accounts are in AWS. Also it is assumed that there is a singular name space for all pipeline roles regardless of account in an aws multi account scenario. Current variables are: INFRA_BUCKET (SSM), INFRA_ROLE_ARN (STATIC), INFRA_ACCOUNT_NUMBER (STATIC), PYTHON_VERSION (INPUT), AWS_REGION (STATIC), AWS_ACCOUNT_IDS (SSM), SECRET_TOKEN (SSM), ENVIRONMENT (INPUT), and APP_NAME (Github Repository Name). During this environment set, it will also log ingot aws, parse and install python from a pyproject.toml file, and grab a secret token from AWS Secrets Manager."
inputs:
  SECRET_ID:
    description: "The secret ID to retrieve GH_TOKEN"
    required: true
  AWS_REGION:
    description: "The AWS region to use"
    required: true
  AWS_ACCOUNT_ID:
    description: "The AWS account ID to use. This would be the account that holds the Secret referenced in SECRET_ID"
    required: true
  ROLE_NAME:
    description: "The IAM role name to assume"
    required: true
  ENVIRONMENT:
    description: "The environment to deploy to"
    required: true
  SSM_PARAMETER_PREFIX:
    description: "The SSM parameter prefix to use"
    required: true
  INFRA_BUCKET_SSM_PARAMETER_NAME:
    description: "The SSM parameter name for the infra bucket"
    required: true
  AWS_ACCOUNT_IDS_SSM_PARAMETER_NAME:
    description: "The SSM parameter name for the account ids"
    required: true

runs:
  using: "composite"
  steps:
    - name: Grab Python Version and Install
      id: python_processing
      uses: veracityio/composites/install_python@main
    - name: Set Environment
      shell: bash
      run: echo "ENVIRONMENT=${{ inputs.ENVIRONMENT }}" >> $GITHUB_ENV
    - name: Set AWS Account ID
      shell: bash
      run: echo "INFRA_ACCOUNT_NUMBER=${{ inputs.AWS_ACCOUNT_ID }}" >> $GITHUB_ENV
    - name: Set AWS Region
      shell: bash
      run: echo "AWS_REGION=${{ inputs.AWS_REGION }}" >> $GITHUB_ENV
    - name: Grab Secret Token and login to infra
      id: secret_token
      uses: veracityio/composites/get_secret_token@main
      with:
        SECRET_ID: ${{ inputs.SECRET_ID }}
        AWS_REGION: ${{ inputs.AWS_REGION }}
        AWS_ACCOUNT_ID: ${{ env.AWS_ACCOUNT_ID }}
        ROLE_NAME: ${{ inputs.ROLE_NAME }}
    - name: Grab and set Infra Bucket SSM
      id: infra_bucket
      shell: bash
      run: |
        INFRA_BUCKET=$(aws ssm get-parameter --name ${{ inputs.SSM_PARAMETER_PREFIX }}/${{ inputs.INFRA_BUCKET_SSM_PARAMETER_NAME }} --region ${{ inputs.AWS_REGION }} --query 'Parameter.Value' --output text)
        echo "INFRA_BUCKET=${INFRA_BUCKET}" >> $GITHUB_ENV
    - name: Set APP_NAME
      shell: bash
      run: echo "APP_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
    - name: Grab and set AWS Account IDs
      id: aws_account_ids
      shell: bash
      run: |
        AWS_ACCOUNT_IDS=$(aws ssm get-parameter --name ${{ inputs.SSM_PARAMETER_PREFIX }}/${{ inputs.AWS_ACCOUNT_IDS_SSM_PARAMETER_NAME }} --region ${{ inputs.AWS_REGION }} --query 'Parameter.Value' --output text)
        echo "AWS_ACCOUNT_IDS=${AWS_ACCOUNT_IDS}" >> $GITHUB_ENV
